{{- $component := "job-patch" }}
{{- if $.Values.patchCertificates.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  annotations:
    "helm.sh/hook": pre-install,pre-upgrade
    "helm.sh/hook-delete-policy": before-hook-creation,hook-succeeded
  name: {{ template "k8s-crdguard.fullname" $ }}-{{ $component }}-create
  labels:
{{- include "k8s-crdguard.component" $component | indent 4 }}
{{- include "k8s-crdguard.labels" $ | indent 4 }}
spec:
  template:
    metadata:
      name: {{ template "k8s-crdguard.fullname" $ }}
      labels:
        app: {{ template "k8s-crdguard.name" $ }}
{{- include "k8s-crdguard.labels" $ | indent 8 }}
    spec:
      {{- with $.Values.patchCertificates.priorityClassName }}
      priorityClassName: {{ . }}
      {{- end }}
      containers:
        - name: create
          image: {{ $.Values.patchCertificates.image.repository }}:{{ $.Values.patchCertificates.image.tag }}
          imagePullPolicy: {{ $.Values.patchCertificates.pullPolicy }}
          args:
            - create
            - --host={{ template "k8s-crdguard.fullname" $ }},{{ template "k8s-crdguard.fullname" $ }}.{{ $.Release.Namespace }}.svc
            - --key-name=key
            - --cert-name=cert
            - --namespace={{ $.Release.Namespace }}
            - --secret-name={{ template "k8s-crdguard.fullname" $ }}
          resources:
{{ toYaml $.Values.patchCertificates.resources | indent 12 }}
      restartPolicy: OnFailure
      serviceAccountName: {{ template "k8s-crdguard.fullname" $ }}-{{ $component }}
      securityContext:
        runAsNonRoot: true
        runAsUser: 2000
{{- end }}
